name: Backend

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: init
        run: |
          docker-compose build
          docker-compose up -d
      - name: composer install
        run: docker-compose exec -T app composer install
      - name: init link and cache
        run: docker-compose exec -T app php -r "copy('.env.example', '.env');"
      - name: Generate key
        run: docker-compose exec -T app php artisan key:generate
      - name: Directory Permissions
        run: |
          docker-compose exec -T app php artisan storage:link
          docker-compose exec -T app chmod -R 777 storage
          docker-compose exec -T app chmod -R 777 bootstrap/cache
          docker-compose exec -T app php artisan config:cache
      - name: check
        run: |
          sh -c 'docker-compose logs -f db | { sed "/\[Entrypoint\]: MySQL init process done\. Ready for start up\./ q" && kill $$ ;}' >/dev/null 2>&1 || :
      - name: migrate
        run: |
          docker-compose up -d
          docker-compose exec -T app php artisan migrate:fresh
      - name: re migrate
        run: docker-compose exec -T app php artisan migrate:refresh --seed
      - name: Execute tests
        run: docker-compose exec -T app composer test
      - name: artisan コマンドが正しく実行されるか
        run: |
          docker-compose exec -T app php artisan cache:clear
          docker-compose exec -T app php artisan config:clear
          docker-compose exec -T app php artisan view:clear

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [laravel-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Deploy
        env:
          PRIVATE_KEY: ${{ secrets.XSERVER_SSH_KEY }}
          USER_NAME: ${{ secrets.XSERVER_USER_NAME }}
          HOST_NAME: ${{ secrets.XSERVER_HOST_NAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -p 10022 -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} 'cd ~/miyameshi.com/public_html/api/miya-meshi && git pull origin master && cd backend && php artisan cache:clear && php artisan config:cache && php artisan route:clear && php artisan view:clear'
